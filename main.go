package main

import (
	"fmt"
	"net/http"
	"os"
	"os/exec"
	"time"

	//ufio"
	"encoding/json"
	"math/rand"

	"github.com/higgyhiggy/project-0/file"
)

type AutoGenerated []struct {
	Text   string `json:"text"`
	Author string `json:"author"`
}
type quotes struct {
	Text   string `json:"text"`
	Author string `json:"author"`
}

var word AutoGenerated

func main() {
	currentTime := time.Now()
	cdate := currentTime.Format("jan-02-2006")
	//asks the env to get user name

	//0 caller location path
	// 1 first arg
	//2 second arg and so on
	user := os.Getenv("USER")
	fileName := os.Args[2]
	s := cdate + ":" + file.Create(name, fileName)
	fmt.Println(s, user)

	rand.Seed(time.Now().UnixNano())
	resp, err := http.Get("https://type.fit/api/quotes")
	if err != nil {
		panic(err)
	}
	defer resp.Body.Close()
	err = json.NewDecoder(resp.Body).Decode(&word)
	if err != nil {
		panic(err)
	}
	/*
		for i, _ := range word {
			fmt.Println(word[i].Text)
		}
	*/
	n := len(word)

	guess := rand.Intn(n)

	f, _ := os.Create(cdate + ":" + fileName)
	n2, _ := f.WriteString(word[guess].Text)

	fmt.Println(n2, "bytes written succesffully")

	out, _ := exec.Command("code", s).Output()
	fmt.Printf("the date is %s\n", out)
	//fmt.Println(fileName)
	//fmt.Println(file.Create(file, "day 1"))

}
